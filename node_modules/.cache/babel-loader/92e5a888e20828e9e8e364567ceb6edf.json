{"ast":null,"code":"var _jsxFileName = \"/Users/ashleylee/Desktop/THINKFUL/Projects/bookstore-api.io/src/bookApp.js\";\nimport React, { Component } from 'react';\nimport BookSelector from './bookstoreSelector';\n\nclass bookApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      selected: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://www.googleapis.com/books/v1/volumes.json?page-size=5000').then(response => response.json()).then(data => {\n      const books = Object.keys(data).map(key => data[key].item[0]);\n      this.setState({\n        books\n      });\n    });\n  }\n\n  setSelected(selected) {\n    this.setState({\n      selected\n    });\n  }\n\n  render() {\n    const bookstore = this.state.selected ? /*#__PURE__*/React.createElement(\"bookstore\", {\n      name: this.state.selected['book-names'],\n      books: this.state.selected.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookstore_app__placeholder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Select a book\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bookstore_app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BookSelector, {\n      books: this.state.books,\n      changeHandler: selected => this.setSelected(selected),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), bookstore);\n  }\n\n}\n\nexport default bookApp;","map":{"version":3,"sources":["/Users/ashleylee/Desktop/THINKFUL/Projects/bookstore-api.io/src/bookApp.js"],"names":["React","Component","BookSelector","bookApp","constructor","props","state","books","selected","componentDidMount","fetch","then","response","json","data","Object","keys","map","key","item","setState","setSelected","render","bookstore","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAGPC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iEAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,YAAMP,KAAK,GAAGQ,MAAM,CAACC,IAAP,CAAYF,IAAZ,EACPG,GADO,CACHC,GAAG,IAAIJ,IAAI,CAACI,GAAD,CAAJ,CAAUC,IAAV,CAAe,CAAf,CADJ,CAAd;AAEA,WAAKC,QAAL,CAAc;AACZb,QAAAA;AADY,OAAd;AAGD,KARH;AASD;;AAEDc,EAAAA,WAAW,CAACb,QAAD,EAAW;AACpB,SAAKY,QAAL,CAAc;AACZZ,MAAAA;AADY,KAAd;AAGD;;AACFc,EAAAA,MAAM,GAAG;AAER,UAAMC,SAAS,GAAG,KAAKjB,KAAL,CAAWE,QAAX,gBACR;AAAW,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoB,YAApB,CAAjB;AAAoD,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,QAAX,CAAoBgB,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,gBAER;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFV;AAIE,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,KADpB;AAEE,MAAA,aAAa,EAAEC,QAAQ,IAAI,KAAKa,WAAL,CAAiBb,QAAjB,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIGe,SAJH,CADF;AAQD;;AA1C6B;;AA4ChC,eAAepB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport BookSelector from './bookstoreSelector'\n\nclass bookApp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          books: [],\n          selected: null\n        };\n      }\n\n\ncomponentDidMount() {\n    fetch('https://www.googleapis.com/books/v1/volumes.json?page-size=5000')\n      .then(response => response.json())\n      .then(data => {\n        const books = Object.keys(data)\n              .map(key => data[key].item[0]);\n        this.setState({\n          books\n        });\n      });\n  }\n\n  setSelected(selected) {\n    this.setState({\n      selected\n    });\n  }\n render() {\n   \n  const bookstore = this.state.selected\n          ? <bookstore name={this.state.selected['book-names']} books={this.state.selected.name}/>\n          : <div className=\"bookstore_app__placeholder\">Select a book</div>;\n\n    return (\n      <div className=\"bookstore_app\">\n        <BookSelector\n          books={this.state.books}\n          changeHandler={selected => this.setSelected(selected)}/>\n        {bookstore}\n      </div>\n    );\n  }\n}\nexport default bookApp;"]},"metadata":{},"sourceType":"module"}